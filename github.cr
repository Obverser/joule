require "http/client"
require "json"
require "xml"

class GitHub
    class Repo
        include JSON::Serializable
        
        property id : UInt32
        property name : String
        property full_name : String
        property html_url : String
        property description : String?
        property fork : Bool
        property ssh_url : String
        property language : String?
        property pushed_at : String
    end

    def self.regenerate() : Nil
        static = "./gen/github.html"
        api = "https://api.github.com/users/Obverser/repos"

        collection = Array(Repo).from_json(HTTP::Client.get(api).body)
        sorted_collection = collection.sort { |x, y| Time.parse_local(y.pushed_at, "%FT%TZ") <=> Time.parse_local(x.pushed_at, "%FT%TZ") }

        puts "[GITHUB] " + Time.utc.to_s + ": Client received Array(Repo), sorted by pushed_at"

        File.open(static, "w") do |file|
            content = XML.build_fragment(indent: "    ") do |xml|
                xml.comment("Occasionally generated by github.cr, edit the generator instead of this file")
                xml.element("link", rel: "stylesheet", href: "/style/base")

                sorted_collection.each do |repo|
                    xml.element("div", class: "repo") do
                        xml.element("h2") { xml.text repo.name }
                        xml.element("p") { xml.text repo.description.to_s }
                    end
                end
            end
            
            file.truncate
            file.puts content
        end

        puts "[GITHUB] " + Time.utc.to_s + ": Static file finished"
    end
end