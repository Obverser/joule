class Blog
    def self.regenerate() : Nil
        markdown = Dir.open "./md"
        posts = "./gen/posts"
        blog = File.open "./gen/blog.html", "w"

        blog.truncate
        blog.puts "<!--Occasionally generated by blog.cr, edit the generator instead of this file-->\n<link rel=\"stylesheet\" href=\"/style/base\" />"

        markdown.each_child do |file|
            if Dir.exists? "./md/" + file
                next
            end

            path = posts + "/" + file.rchop("md") + "html"
            puts "[ BLOG ] " + Time.utc.to_s + ": Regenerating HTML with pandoc for " + path

            Process.run "pandoc -s --mathml " + markdown.path + "/" + file + " -o " + path + " -c /style/base --shift-heading-level-by=-1", shell: true

            blog.puts "<a href=\"/blog/" + file.lchop(markdown.path).rchop(".md") + "\" target=\"home\">" + File.read_lines(markdown.path + "/" + file)[0].lchop("# ") +"</a>"
        end

        puts "[ BLOG ] " + Time.utc.to_s + ": Blog pages and static file finished"

        markdown.close
        blog.close
    end
end